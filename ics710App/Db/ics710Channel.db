##data of individual channel:raw data, calibrated voltages, DC offset, etc.
#MON NSLS2 naming:[PSy[:PI]][-SSy[:SI]][-TSy[:TI]]{Dev[:DI]}[SgN[:SgI][-SgD]]
#### Psy	-	Primary system
#### Ssy	-	Secondary system
#### Dev	-	Device name
## CHANNEL  -	device(Dev) instance and #channel of the board(MODULE)  
## CARD     -  "0" refers to the first digitizer found during initialization.
# For Acqiris system, it's the top slot(#5) if there's one digitizer in slot 5 
## NELM     -	max. number of elements of waveform record 

#raw waveform data: 32-bit integer
record(waveform,"${MON}Raw-Wf")
{
   field(SCAN,"I/O Intr")
   field(DESC,"raw waveform data")
   field(DTYP,"ics710ReadRawData")
   field(NELM,"${NELM}")
   field(FTVL,"LONG")
   field(INP,"@C${CARD} S${CHANNEL}")
   field(FLNK,"${MON}Raw-aSub_")
}

record(ao, "${MON}Offset-SP")
{
    field(DESC,"DC Offset")
    field(PINI, "YES")
    field(PREC,"5")
    field(EGU,"V")
    info(autosaveFields_pass0, "VAL")
}
 
record(ao, "${MON}Coeff-SP")
{
    field(DESC,"coefficient of input range")
    field(PINI, "YES")
    field(VAL, "1.0")
    field(PREC,"5")
    info(autosaveFields_pass0, "VAL")
}

record(longout,"${MON}StartPoint-SP")
{
   field(DESC,"start sample point of selected region")
   field(PINI,"YES")
   field(DRVH, "${NELM}")
   field(DRVL, "0")
   field(VAL, "0")   
   info(autosaveFields_pass0, "VAL")
   field(FLNK,"${MON}ROISamples-I")
}

record(longout,"${MON}EndPoint-SP")
{
   field(DESC,"end sample point of selected region")
   field(PINI,"YES")
   field(DRVH, "${NELM}")
   field(DRVL, "1")
   field(VAL, "${NELM}")    
   info(autosaveFields_pass0, "VAL")
   field(FLNK,"${MON}ROISamples-I")
}

#see ics710ProcessWfAsub.cpp: 
#data processing: convert raw data to voltages, mean, min, max, integral(sum),
#std(RMS noise), etc. ;
record(aSub,"${MON}Raw-aSub_")
{
    field (DESC,"process raw data")
    field (SNAM,"processWf")
 #get raw waveform data (32-bit == sizeof(long))
    field (INPA, "${MON}Raw-Wf")
    field (FTA, "LONG")
    field (NOA, "${NELM}")
#get DC offset, input range coefficient    
    field (INPB, "${MON}Offset-SP")
    field (FTB, "DOUBLE")
    field (NOB, "1")
#get input range coefficient such as 0.9834, 0.9943, 1.00     
    field (INPC, "${MON}Coeff-SP")
    field (FTC, "DOUBLE")
    field (NOC, "1")    
#get start sample point of selected region   
    field (INPD, "${MON}StartPoint-SP")
    field (FTD, "ULONG")
    field (NOD, "1")    
#get end sample point of selected region   
    field (INPE, "${MON}EndPoint-SP")
    field (FTE, "ULONG")
    field (NOE, "1")    
#voltages calibrated against gain, DC offset, gain coefficient      
    field (OUTA, "${MON}V-Wf PP")
    field (FTVA, "DOUBLE")
    field (NOVA, "${NELM}")
#data processing results: mean, max, min, sum, std, etc.   
#over part of the waveform (selected region) and within the whole waveform
    field (OUTB, "${MON}AveV-I PP")
    field (FTVB, "DOUBLE")
    field (NOVB, "1")
    field (OUTC, "${MON}MaxV-I PP")
    field (FTVC, "DOUBLE")
    field (NOVC, "1")
    field (OUTD, "${MON}MinV-I PP")
    field (FTVD, "DOUBLE")
    field (NOVD, "1")
    field (OUTE, "${MON}SumV-I PP")
    field (FTVE, "DOUBLE")
    field (NOVE, "1")
    field (OUTF, "${MON}StdV-I_ PP")
    field (FTVF, "DOUBLE")
    field (NOVF, "1")
    field (OUTG, "${MON}AveVROI-I PP")
    field (FTVG, "DOUBLE")
    field (NOVG, "1")
    field (OUTH, "${MON}MaxVROI-I PP")
    field (FTVH, "DOUBLE")
    field (NOVH, "1")
    field (OUTI, "${MON}MinVROI-I PP")
    field (FTVI, "DOUBLE")
    field (NOVI, "1")
    field (OUTJ, "${MON}SumVROI-I PP")
    field (FTVJ, "DOUBLE")
    field (NOVJ, "1")
    field (OUTK, "${MON}StdVROI-I_ PP")
    field (FTVK, "DOUBLE")
    field (NOVK, "1")    
    field (OUTL, "${MON}ROILength-I PP")
    field (FTVL, "DOUBLE")
    field (NOVL, "1") 
}

record(waveform,"${MON}V-Wf")
{
   field(DESC,"voltage waveform data")
   field(INP,"${MON}Raw-aSub_.VALA")
   field(NELM,"${NELM}")
   field(FTVL,"DOUBLE")
   field(PREC,"6")
   field(EGU,"V")
}

record(ai,"${MON}AveV-I")
{
   field(DESC,"averaged voltage")
   field(INP,"${MON}Raw-aSub_.VALB")
   field(PREC,"6")
   field(EGU,"V")
}

record(ai,"${MON}MaxV-I")
{
   field(DESC,"max. voltage")
   field(INP,"${MON}Raw-aSub_.VALC")
   field(PREC,"6")
   field(EGU,"V")
}

record(ai,"${MON}MinV-I")
{
   field(DESC,"min. voltage")
   field(INP,"${MON}Raw-aSub_.VALD")
   field(PREC,"6")
   field(EGU,"V")
}

record(ai,"${MON}SumV-I")
{
   field(DESC,"sum voltage")
   field(INP,"${MON}Raw-aSub_.VALE")
   field(PREC,"6")
   #field(EGU,"V")
}

record(ai,"${MON}StdV-I_")
{
   field(DESC,"std voltage")
   field(INP,"${MON}Raw-aSub_.VALF")
   field(PREC,"6")
   field(EGU,"V")
   field(FLNK,"${MON}StdV-I")
}

record(calc,"${MON}StdV-I")
{
   field(DESC,"std voltage(mV)")
   field(INPA,"${MON}StdV-I_")
   field(CALC,"A*(1e+3)")
   field(PREC,"6")
   field(EGU,"mV")
}

#processed data over ROI (region of interest)
record(ai,"${MON}AveVROI-I")
{
   field(DESC,"ROI averaged voltage")
   field(INP,"${MON}Raw-aSub_.VALG")
   field(PREC,"6")
   field(EGU,"V")
   #averaged volt of ROI is for beam charge Q
   field(FLNK,"${MON}Q-Calc_")
}

#limit interested number of shorts (INOS) to 60
record(longout,"${MON}NbrShots-SP")
{
   field(DESC,"interested number of shorts")
   field(PINI,"YES")
   field(DRVH, "60")
   field(DRVL, "1")
   field(VAL, "1")   
   info(autosaveFields_pass0, "VAL")
   field (FLNK, "${MON}CirBuffer-aSub_")
}

#Circular buffer: 60 samples of AveVROI, 1-min data if 1Hz rate
record(compress,"${MON}AveVROIBuf-Wf_")
{
	field(DESC, "60 Samples buffer")
	field(INP,"${MON}AveVROI-I CP NMS")
	field(ALG,"Circular Buffer")
	field(NSAM,"60")
	#field(NSAM,"${MON}NbrShots-SP CP NMS")
	field(PREC,"6")
	field(EGU,"V")
	#field (FLNK, "${MON}CirBuffer-aSub_")
}

#beam charge Q buffer: NSLS-2 injection@10Hz
record(compress,"${MON}QBuf-Wf_")
{
	field(DESC, "beam charge buffer")
	field(INP,"${MON}Q-I CP NMS")
	field(ALG,"Circular Buffer")
	field(NSAM,"10")
	field(PREC,"6")
	field(EGU,"nC")
	field (FLNK, "${MON}CirBuffer-aSub_")
}

record(longin,"${MON}EvtRate-I")
{
   field(DESC,"trigger/event rate")
   #field(INP,"from EVR")
   field(VAL,"10")
   field(EGU, "Hz")
}

#see ics710ProcessWfAsbu.cpp: process circular buffered data.
record(aSub,"${MON}CirBuffer-aSub_")
{
    field (DESC,"process circular buffer data")
    field (SNAM,"processCirBuf")
    field (INPA, "${MON}AveVROIBuf-Wf_")
    field (FTA, "DOUBLE")
    field (NOA, "60")
    field (INPB, "${MON}NbrShots-SP")
    field (FTB, "ULONG")
    field (NOB, "1")
    #beam charge Q buffer: NSLS-2 injection@10Hz
    field (INPC, "${MON}QBuf-Wf_")
    field (FTC, "DOUBLE")
    field (NOC, "10")
    #event rate / injection rate
    field (INPD, "${MON}EvtRate-I")
    field (FTD, "ULONG")
    field (NOD, "1")
    field (OUTA, "${MON}StdVROIOverINOS-I PP")
    field (FTVA, "DOUBLE")
    field (NOVA, "1")
    field (OUTB, "${MON}AveVROIOverINOS-I PP")
    field (FTVB, "DOUBLE")
    field (NOVB, "1")
    field (OUTC, "${MON}QRate-I PP")
    field (FTVC, "DOUBLE")
    field (NOVC, "1")
}

record(ai,"${MON}StdVROIOverINOS-I")
{
   field(DESC,"std over NOIS")
   field(INP,"${MON}CirBuffer-aSub_.VALA")
   field(PREC,"6")
   field(EGU,"V")
}

record(ai,"${MON}AveVROIOverINOS-I")
{
   field(DESC,"ave over NOIS")
   field(INP,"${MON}CirBuffer-aSub_.VALB")
   field(PREC,"6")
   field(EGU,"V")
}

record(ai,"${MON}MaxVROI-I")
{
   field(DESC,"ROI max. voltage")
   field(INP,"${MON}Raw-aSub_.VALH")
   field(PREC,"6")
   field(EGU,"V")
}

record(ai,"${MON}MinVROI-I")
{
   field(DESC,"ROI min. voltage")
   field(INP,"${MON}Raw-aSub_.VALI")
   field(PREC,"6")
   field(EGU,"V")
}

record(ai,"${MON}SumVROI-I")
{
   field(DESC,"ROI sum voltage")
   field(INP,"${MON}Raw-aSub_.VALJ")
   field(PREC,"6")
   #field(EGU,"V")
}

record(ai,"${MON}StdVROI-I_")
{
   field(DESC,"ROI std voltage")
   field(INP,"${MON}Raw-aSub_.VALK")
   field(PREC,"6")
   field(EGU,"V")
   field(FLNK,"${MON}StdVROI-I")
}

record(calc,"${MON}StdVROI-I")
{
   field(DESC,"ROI std voltage(mV)")
   field(INPA,"${MON}StdVROI-I_")
   field(CALC,"A*(1e+3)")
   field(PREC,"6")
   field(EGU,"mV")
}

record(ai,"${MON}ROILength-I")
{
   field(DESC,"ROI length: ms")
   field(INP,"${MON}Raw-aSub_.VALL")
   field(PREC,"3")
   field(EGU,"ms")
}

record(calc,"${MON}ROISamples-I")
{
   field(DESC,"Length of ROI")
   field(INPA,"${MON}StartPoint-SP")
   field(INPB,"${MON}EndPoint-SP")
   field(CALC,"B-A")
   field(PREC,"0")
   field(EGU,"samples")
}

#beam charge measurement
record(ai,"${MON}FullScale-I")
{
   field(DESC,"ICT/BCM full scale: nC")
   #field(INP,"${MON}FullScaleFromPLC-Sel_")
   field(VAL,"160")
   field(PREC,"1")
   field(EGU,"nC")
}

#Bergoz ICT charge calibrated against BCM gain settings
record(calc,"${MON}Q-Calc_")
{
   field(DESC,"Beam charge measured by ICT")
   field(INPA,"${MON}AveVROI-I")
   field(INPB,"${MON}FullScale-I")
   field(CALC,"B*(A/8.0)")
   field(PREC,"6")
   field(EGU,"nC")
   field(FLNK,"${MON}Q-I")
}

record(ai,"${MON}Q-I")
{
   field(DESC,"Beam charge measured by ICT")
   field(INP,"${MON}Q-Calc_")
   field(PREC,"6")
   field(EGU,"nC")
   #field(FLNK,"${MON}QRate-I")
}

record(ai,"${MON}QRate-I")
{
   field(DESC,"injected charge rate: nC/s")
   field(INP,"${MON}CirBuffer-aSub_.VALC")
   field(PREC,"6")
   field(EGU,"nC/s")
}

#INOS: interested number of shots 
record(calc,"${MON}AveQOverINOS-Calc_")
{
   field(DESC,"averaged charge over INOS")
   field(INPA,"${MON}AveVROIOverINOS-I CP")
   field(INPB,"${MON}FullScale-I")
   field(CALC,"B*(A/8.0)")
   field(PREC,"6")
   field(EGU,"nC")
   field(FLNK,"${MON}AveQOverINOS-I")
}

record(ai,"${MON}AveQOverINOS-I")
{
   field(DESC,"average charge over INOS")
   field(INP,"${MON}AveQOverINOS-Calc_")
   field(PREC,"6")
   field(EGU,"nC")
}

record(calc,"${MON}StdQOverINOS-Calc_")
{
   field(DESC,"std charge over INOS")
   field(INPA,"${MON}StdVROIOverINOS-I CP")
   field(INPB,"${MON}FullScale-I")
   field(CALC,"B*(A/8.0)")
   field(PREC,"6")
   field(EGU,"nC")
   field(FLNK,"${MON}StdQOverINOS-I")
}

record(ai,"${MON}StdQOverINOS-I")
{
   field(DESC,"std charge over INOS")
   field(INP,"${MON}StdQOverINOS-Calc_")
   field(PREC,"6")
   field(EGU,"nC")
}
