## Process digitizer data to get the beam charge measured by Bergoz ICT & BCM 
#MON NSLS2 naming:[PSy[:PI]][-SSy[:SI]][-TSy[:TI]]{Dev[:DI]}[SgN[:SgI][-SgD]]
#### Psy	-	Primary system
#### Ssy	-	Secondary system
#### Dev	-	Device name
#### MON	-	LTB-BI{ICT:1}

#beam charge measurement at transfer-line
record(ai,"${MON}QFullScale-I")
{
   field(DESC,"ICT/BCM full scale: nC")
   #Full scale is calculated in PLC IOC
   field(INP,"${MON}FullScale-I CP")
   #field(VAL,"160")
   field(PREC,"1")
   field(EGU,"nC")
   field(FLNK,"${MON}Q-Calc_")
}

#each BCM has varied max. output voltage, not exactly 8.0V
#8.104V(BCM1-SN172),7.664V(BCM2-SN169),7.532V(BCM3-SN173),7.444V(BCM4-SN174)
#see ictQSpecific.db

#Bergoz ICT charge calibrated against BCM gain settings 
#and Q offset (background noise)
record(ao,"${MON}QOffset-SP")
{
   field(DESC,"ICT offset")
   field(PREC,"3")
   field(EGU,"nC")
   field(FLNK,"${MON}Q-Calc_")
   info(autosaveFields_pass0, "VAL")
}

record(calc,"${MON}Q-Calc_")
{
   field(DESC,"Beam charge measured by ICT")
   #${MON}AveVROI-I is in ics710Channel.db
   field(INPA,"${MON}AveVROI-I CP")
   field(INPB,"${MON}QFullScale-I")
   field(INPC,"${MON}QOffset-SP")
   field(INPD,"${MON}VFullScale-I")
   field(CALC,"(ABS(B*(A/D)))-C")
   field(PREC,"3")
   field(EGU,"nC")
   field(FLNK,"${MON}Q-I")
}

record(ai,"${MON}Q-I")
{
   field(DESC,"Beam charge measured by ICT")
   field(INP,"${MON}Q-Calc_")
   field(PREC,"3")
   field(EGU,"nC")
   field(MDEL,"-1")
   #field(FLNK,"${MON}Buffer-aSub_")
   field(FLNK,"${MON}CircularQ-com_")
}

#circular buffer of charge Q
record(compress,"${MON}CircularQ-com_")
{
	field(DESC, "circular buffer Q")
	#INP is scalar
	field(INP,"${MON}Q-I")
	field(ALG,"Circular Buffer")
	field(NSAM,"10")
	#NSAM can't be changed to the interested number of shots at run-time
	#N can be changed by caput
    field(FLNK,"${MON}Buffer-aSub_")
}

#injection rate calculated from LN-TS{}Mode-Sel
#see ictQSpecific.db

record(longin,"${MON}Shots-I")
{
	field(DESC,"shots changed in aSub")
	field(VAL,"0")
	field(INP,"${MON}Buffer-aSub_.F")
}

record(longin,"${MON}Events-I")
{
	field(DESC,"Events changed in aSub")
	field(VAL,"0")
	field(INP,"${MON}Buffer-aSub_.G")
}
   
#see ics710ProcessWfAsbu.cpp: process INOS buffered data.
#FLNKed by ${MON}CircularQ-com_ 
record(aSub,"${MON}Buffer-aSub_")
{
    field (DESC,"process buffered data")
    field (SNAM,"processBuf")
    field (INPA, "${MON}AveVROI-I")
    field (FTA, "DOUBLE")
    field (NOA, "1")
    #N is the interested number of shots
    field (INPB, "${MON}AveVROIOverINOS-I.N")
    field (FTB, "ULONG")
    field (NOB, "1")
    field (INPC, "${MON}Q-I")
    field (FTC, "DOUBLE")
    field (NOC, "1")
    #event rate / injection rate from LN-TS{}Mode-Sel
    #field (INPD, "LN-TS{}ShotsPerSecond-Calc_")
    field (INPD, "${MON}ShotsPerSecond-Calc_")
    field (FTD, "ULONG")
    field (NOD, "1")
    field (INPE, "${MON}CircularQ-com_")
    field (FTE, "DOUBLE")
    field (NOE, "10")
    #${MON}Shots-I is needed for each ${MON}
    field (INPF, "${MON}Shots-I PP")
    field (FTF, "ULONG")
    field (NOF, "1")
    field (INPG, "${MON}Events-I PP")
    field (FTG, "ULONG")
    field (NOG, "1")
    field (OUTA, "${MON}StdVROIOverINOS-I PP")
    field (FTVA, "DOUBLE")
    field (NOVA, "1")
    field (OUTB, "${MON}QRateNoMovingAve-I PP")
    field (FTVB, "DOUBLE")
    field (NOVB, "1")
    field (OUTC, "${MON}AveVROI-Buf_ PP")
    field (FTVC, "DOUBLE")
    field (NOVC, "60")
    field (OUTD, "${MON}Q-Buf_ PP")
    field (FTVD, "DOUBLE")
    field (NOVD, "60")
    field (OUTE, "${MON}QRate-I PP")
    field (FTVE, "DOUBLE")
    field (NOVE, "1")
}
#QRate is moving sum
record(ai,"${MON}QRate-I")
{
   field(DESC,"QRate with moving sum")
   field(INP,"${MON}Buffer-aSub_.VALE")
   field(PREC,"3")
   field(MDEL,"-1")
   field(EGU,"nC/s")
   field(FLNK,"${MON}QSum:1h-Com_")
}

#QSum:1h-I: one-hour integrated charge
record(compress, "${MON}QSum:1h-Com_")
{
    field(DESC, "one-hour buffer of QRate data")
    field(INP,  "${MON}QRate-I")
    field(ALG,  "Circular Buffer")
    field(NSAM, "3600")
    field(FLNK,"${MON}QSum:1h-Acalc_")
}

record(acalcout, "${MON}QSum:1h-Acalc_")
{
    field(DESC, "one-hour integrated charge")
    field(NELM, "3600")
    field(INAA, "${MON}QSum:1h-Com_")
    field(CALC, "SUM(AA)/1000.0")
    field(NUSE, "3600")
    field(OUT,  "${MON}QSum:1h-I_ PP")
}

record(ai, "${MON}QSum:1h-I_")
{
    field(DESC, "one-hour integrated charge")
    field(PREC, "3")
    field(EGU, "uC")
}

#QSum:1h-I: one-hour integrated charge calculated by aSub
record(aSub, "$(MON)calc-ASub_") {
  field(INAM, "InitTimedBuffer")
  field(SNAM, "ProcTimedBuffer")
  field(FTA , "DOUBLE") # Input value
  field(FTB , "DOUBLE") # Time interval (sec)
  field(FTC , "UCHAR")  # 1==Reset
  field(FTVA, "DOUBLE") # Sum
  field(FTVB, "ULONG")  # Invalid Count
  field(FTVC, "ULONG")  # Total Count
  field(INPA, "$(MON)Q-I CP")
  field(INPB, "3600")
  field(INPC, "0")
  field(OUTA, "$(MON)QSum:1h-Calc_.A PP MSS")
  #field(OUTA, "$(MON)QSum:1h-I PP MSS")
  field(OUTB, "$(MON)Cnt:bad-I PP MSS")
  field(OUTC, "$(MON)Cnt:total-I PP MSS")
}

record(calcout, "$(MON)QSum:1h-Calc_")
{
    field(DESC, "one-hour integrated charge")
    field(CALC, "A/1000.0")
    field(OUT,  "${MON}QSum:1h-I PP MSS")
}

record(ai, "$(MON)QSum:1h-I") {
    field(DESC, "one-hour integrated charge")
    field(PREC, "3")
    field(EGU, "uC")
}

record(longin, "$(MON)Cnt:bad-I") {
}

record(longin, "$(MON)Cnt:total-I") {
}


#std Q over interested number of shots (INOS)
record(ai,"${MON}StdVROIOverINOS-I")
{
   field(DESC,"stdVROI over NOIS")
   field(INP,"${MON}Buffer-aSub_.VALA")
   field(PREC,"6")
   field(EGU,"V")
}

record(calc,"${MON}StdQOverINOS-Calc_")
{
   field(DESC,"std charge over INOS")
   field(INPA,"${MON}StdVROIOverINOS-I CP")
   field(INPB,"${MON}QFullScale-I")
   field(INPC,"${MON}VFullScale-I")
   field(CALC,"B*(A/C)")
   field(PREC,"6")
   field(EGU,"nC")
   field(FLNK,"${MON}StdQOverINOS-I")
}

record(ai,"${MON}StdQOverINOS-I")
{
   field(DESC,"std charge over INOS")
   field(INP,"${MON}StdQOverINOS-Calc_")
   field(PREC,"3")
   field(EGU,"nC")
}

#averaged Q over interested number of shots 
#${MON}AveVROIOverINOS-I is in ics710Channel.db
record(calc,"${MON}AveQOverINOS-Calc_")
{
   field(DESC,"averaged charge over INOS")
   field(INPA,"${MON}AveVROIOverINOS-I CP")
   field(INPB,"${MON}QFullScale-I")
   field(INPC,"${MON}QOffset-SP")
   field(INPD,"${MON}VFullScale-I")
   field(CALC,"(ABS(B*(A/D)))-C")
   #field(CALC,"ABS(B*(A/8.0))")
   field(PREC,"6")
   field(EGU,"nC")
   field(FLNK,"${MON}AveQOverINOS-I")
}

record(ai,"${MON}AveQOverINOS-I")
{
   field(DESC,"average charge over INOS")
   field(INP,"${MON}AveQOverINOS-Calc_")
   field(PREC,"3")
   field(EGU,"nC")
}

record(ai,"${MON}QRateNoMovingAve-I")
{
   field(DESC,"QRate without moving average")
   field(INP,"${MON}Buffer-aSub_.VALB")
   field(PREC,"3")
   field(EGU,"nC/s")
}

record(waveform,"${MON}AveVROI-Buf_")
{
   field(DESC,"AveVROI buffer")
   field(INP,"${MON}Buffer-aSub_.VALC")
   field(NELM,"60")
   field(FTVL,"DOUBLE")
   field(PREC,"6")
   field(EGU,"V")
}

record(waveform,"${MON}Q-Buf_")
{
   field(DESC,"Q buffer")
   field(INP,"${MON}Buffer-aSub_.VALD")
   field(NELM,"60")
   field(FTVL,"DOUBLE")
   field(PREC,"3")
   field(EGU,"nC")
}


#Circular buffer: 60 samples of AveVROI, 1-min data if 1Hz rate
record(compress,"${MON}AveVROIBuf-Wf_")
{
	field(DESC, "60 Samples buffer")
	field(INP,"${MON}AveVROI-I CP NMS")
	field(ALG,"Circular Buffer")
	field(NSAM,"60")
	#field(NSAM,"${MON}NbrShots-SP CP NMS")
	field(PREC,"6")
	field(EGU,"V")
	#field (FLNK, "${MON}Buffer-aSub_")
}

#moving average over a window of data
record(compress,"${MON}AveVROIMovAve-I")
{
	field(DESC, "average over INOS")
	#INP is array/circular buffer
	field(INP,"${MON}AveVROIBuf-Wf_ CP NMS")
	field(ALG,"N to 1 Average")
	field(NSAM,"1")
	#N can't be DB_LINK, must be constant
	#field(N,"${MON}NbrShots-SP CP NMS")
	#N is the data window
	field(N,"10")
	field(PREC,"6")
	field(EGU,"V")
	info(autosaveFields_pass0, "N")
}

record(stringout, "$(MON)FilePath") 
{
   field(DESC, "Data log dir path")
   field(PINI, "YES")
   field(VAL, "/home/yhu")
   info(autosaveFields, "VAL")
}
