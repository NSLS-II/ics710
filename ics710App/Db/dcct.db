## Process digitizer data to get the beam current measured by Bergoz DCCT
#MON NSLS2 naming:[PSy[:PI]][-SSy[:SI]][-TSy[:TI]]{Dev[:DI]}[SgN[:SgI][-SgD]]
#### Psy	-	Primary system
#### Ssy	-	Secondary system
#### Dev	-	Device name
#### MON	-	BR-BI{DCCT:1}

#stored beam current at Booster and Ring
#Bergoz DCCT current is calibrated against gain settings 
#and Q offset (background noise)
#The RVAL and VAL of mbbi: [0, 15]; 
#use mbbo here: VAL--[0,15], RVAL--[0,65535] 
#record(mbbi, "${MON}FullScale-I")
record(mbbo, "${MON}FullScale-I")
{
  field(DESC,"scale: 20mA ~ 20000mA")
  field(DTYP,"Raw Soft Channel")
  #must use closed_loop
  field(OMSL, "closed_loop")
  #${MON}Range-Sel is in the ltb-plc IOC 
  field(DOL, "${MON}Range-Sel CP")
  field(ZRVL, "20000")
  field(ONVL, "2000")
  field(TWVL, "200")
  field(THVL, "20")
  field(ZRST, "20A")
  field(ONST, "2A")
  field(TWST, "200mA")
  field(THST, "20mA")
  field(FLNK, "${MON}IVSlope-Calc_")
}

record(calc,"${MON}IVSlope-Calc_")
{
   field(DESC,"slope:beam current/V")
   field(INPA,"${MON}FullScale-I.RVAL")
   field(INPB,"10.0")
   field(CALC,"A/B")
   field(PREC,"5")
   field(EGU,"mA/V")
   field(FLNK, "${MON}QVSlope-Calc_.PROC")
}

record(ao,"${MON}IOffset-SP")
{
   field(DESC,"beam current offset")
   field(PINI,"1")
   field(PREC,"3")
   field(EGU,"mA")
   info(autosaveFields_pass0, "VAL")
   field(FLNK,"BR-BI{DCCT:1}QOffset-I.PROC")
}

#${MON}IOffset-SP is based on AveI
record(calc,"${MON}AveI-I")
{
   field(DESC,"average current")
   field(INPA,"${MON}AveV-I CP")
   field(INPB,"${MON}IVSlope-Calc_")
   field(CALC,"A*B")
   field(PREC,"5")
   field(EGU,"mA")
}

record(acalcout,"${MON}I-aCalc_")
{
   field(DESC,"Beam current by DCCT")
   field(NELM,"100000")
   field(INAA,"${MON}V-Wf CP")
   field(INPA,"${MON}IVSlope-Calc_")
   field(INPB,"${MON}IOffset-SP")
   field(CALC,"ABS((A*AA)-B)")
   field(PREC,"3")
   field(EGU,"mA")
   field(OUT,"${MON}I-Wf PP")
}

record(waveform,"${MON}I-Wf")
{
   field(DESC,"beam current waveform data")
   field(NELM,"1000000")
   field(FTVL,"DOUBLE")
   field(PREC,"3")
   field(EGU,"mA")
}

record(calc,"${MON}AveQ-I")
{
   field(DESC,"average charge")
   field(INPA,"${MON}AveV-I CP")
   field(INPB,"${MON}QVSlope-Calc_")
   field(CALC,"A*B")
   field(PREC,"5")
   field(EGU,"nC")
}

record(acalcout,"${MON}Q-aCalc_")
{
   field(DESC,"Beam charge by DCCT")
   field(NELM,"100000")
   field(INAA,"${MON}V-Wf CP")
   field(INPA,"${MON}QVSlope-Calc_")
   field(INPB,"${MON}QOffset-SP")
   field(CALC,"ABS((A*AA)-B)")
   field(PREC,"3")
   field(EGU,"nC")
   field(OUT,"${MON}Q-Wf PP")
}

record(waveform,"${MON}Q-Wf")
{
   field(DESC,"beam charge waveform data")
   field(NELM,"1000000")
   field(FTVL,"DOUBLE")
   field(PREC,"3")
   field(EGU,"nC")
}


#DCCT calibration current source is DC calibrator KH526 
record(calcout,"${MON}CalStatus-Calc_")
{
	field(DESC, "Is DC calibrator connected?")
	field(SCAN, "10 second")
	#4: 10mA; 5: 100mA
	field(INPA, "SR:C30-DI{KH526}Range-Sel")
	field(INPB, "${MON}CalStatus-Calc_.STAT")
	field(CALC, "A>3&&B==0")
	field(OUT, "${MON}CalStatus-Sts PP")
}

record(bi, "${MON}CalStatus-Sts")
{
	field(DESC, "system status")
	field(ZNAM, "Not Ready")
	field(ONAM, "Ready")
}

record(mbbo, "${MON}StartCal-Sel")
{
	field(DESC, "start calibration")
	field(OUT,  "${MON}Sweep-Calc_.DISA")
	field(ZRST, "Start")
	field(ONST, "Stop")
	field(VAL,  "1")
	field(FLNK, "$(MON)Reset-Seq")
}

record(seq, "$(MON)Reset-Seq")
{
  #DLY* of seq seems asynchronous, be careful  
  field(DESC, "reset PVs")
  field(LNK1, "SR:C30-DI{KH526}Out-SP CA")
  #delay 4 seconds, then reset compress records
  field(DLY2, "4")
  field(LNK2, "${MON}CalOutput-Wf.RES PP")
  field(LNK3, "${MON}CalInput-Wf.RES PP")
  field(LNK4, "${MON}Iterate-Calc_")
  field(LNK5, "${MON}Iterate-Calc_.DISA")
  #if DLY6 is N, then ${MON}Sweep-Calc_ is processed (N+4) seconds afer ${MON}StartCal-Sel
  field(DLY6, "2")
  field(LNK6, "${MON}Sweep-Calc_ PP")
}

#sweep step size: FullScale*0.1/20; steps: 19 (0~18) 
#max. output value: 90%*0.1(due to DCCT windings)*FullScale
record(calcout,"${MON}Sweep-Calc_")
{
	field(DESC, "sweeping DC source")
	#must set DISA, otherwise calibration starts immediately after IOC startup
	field(DISA, "1")
	#field(SDIS, "${MON}StartCal-Sel")
	field(INPA, "${MON}FullScale-I.RVAL")
	field(INPB, "20")
	field(INPC, "${MON}Sweep-Calc_")	
	#field(CALC, "C<=A*0.09?C+A*0.1/B:0")
	field(CALC, "C+A*0.1/B")
	field(OUT, "SR:C30-DI{KH526}Out-SP CA")
    	field(FLNK, "${MON}Delay-Calc_")
}

record(calcout,"${MON}Delay-Calc_")
{
	field(DESC, "wait for the source stable")
	field(INPA, "${MON}Delay-Calc_")
	field(CALC, "!A")
	field(ODLY, "5")
	field(OUT, "${MON}Delay-fanout_.PROC")
	#field(OUT, "${MON}Iterate-Calc_.PROC")
	#field(OUT, "${MON}CalOutput-Wf.PROC")
	#field(OUT, "${MON}Delay-Calc_.B")
	#be careful: ODLY doesn't delay the processing of FLNK
 	#field(FLNK, "${MON}CalOutput-Wf")
}

record(fanout, "${MON}Delay-fanout_")
{
	field(LNK1, "${MON}CalOutput-Wf")
	field(LNK2, "${MON}DelayFan-Calc_")
	#field(LNK2, "${MON}Iterate-Calc_")
}

record(calc,"${MON}DelayFan-Calc_")
{
        field(INPA, "${MON}DelayFan-Calc_")
        field(CALC, "A+1")
}

record(compress,"${MON}CalOutput-Wf")
{
	field(DESC, "output data")
	field(INP,"${MON}AveI-I")
	field(ALG,"Circular Buffer")
	field(NSAM,"19")
	#don't use FLNK now to break the processing lock-set
       #field(FLNK,"${MON}Iterate-Calc_")
}

record(calcout,"${MON}Iterate-Calc_")
{
	field(DESC, "iterate 19 times")
	field(DISV, "17")
	field(INPA, "${MON}Iterate-Calc_")
	#INPB just for triggering record processing; CP breaks lock-set
	field(INPB, "${MON}DelayFan-Calc_ CP")
	#field(INPB, "${MON}Delay-Calc_ CP")
	field(CALC, "A+1")
	#field(ODLY, "3")
	field(OUT,  "${MON}Iterate-Calc_.DISA")
	field(FLNK, "${MON}Sweep-Calc_")
	#field(FLNK, "${MON}Wait-Calc_")
}

record(calc,"${MON}CalInput-Calc_")
{
	field(DESC, "DC source input")
	field(INPA, "${MON}Sweep-Calc_ CP")
	field(CALC, "A*10")
	field(FLNK, "${MON}CalInput-Wf")
}

record(compress,"${MON}CalInput-Wf")
{
	field(DESC, "DC source input")
	field(INP,"${MON}CalInput-Calc_")
	field(ALG,"Circular Buffer")
	field(NSAM,"19")
}


